{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servicios/paciente.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/editar-paciente\", a1];\n};\nfunction MiInfoPage_ion_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 3)(1, \"ion-label\")(2, \"h5\");\n    i0.ɵɵelement(3, \"ion-icon\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵelement(6, \"ion-icon\", 5);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵelement(9, \"ion-icon\", 6);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵelement(12, \"ion-icon\", 6);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\");\n    i0.ɵɵelement(15, \"ion-icon\", 6);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\");\n    i0.ɵɵelement(18, \"ion-icon\", 6);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 7)(21, \"button\", 8);\n    i0.ɵɵelement(22, \"ion-icon\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MiInfoPage_ion_item_7_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const paciente_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deletePaciente(paciente_r1.id));\n    });\n    i0.ɵɵelement(24, \"ion-icon\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const paciente_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \\u00A0 \", paciente_r1.nombre, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", paciente_r1.numCel, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", paciente_r1.nombreMascota, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", paciente_r1.edadMascota, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", paciente_r1.tipoMascota, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", paciente_r1.razaMascota, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, paciente_r1.id));\n  }\n}\nexport class MiInfoPage {\n  constructor(pacienteService, alertController) {\n    this.pacienteService = pacienteService;\n    this.alertController = alertController;\n  }\n  ngOnInit() {\n    this.listAllPacientes();\n  }\n  listAllPacientes() {\n    this.pacienteService.getAll().snapshotChanges().pipe(map(changes => changes.map(c => Object.assign({\n      id: c.payload.doc.id\n    }, c.payload.doc.data())))).subscribe(data => {\n      this.pacientes = data;\n      console.log(this.pacientes);\n    });\n  }\n  deletePaciente(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        header: '¿Esta seguro que desea eliminar el registro?',\n        buttons: [{\n          text: 'No',\n          role: 'cancel'\n        }, {\n          text: 'Si',\n          role: 'confirm',\n          handler: () => {\n            this.pacienteService.delete(id).then(() => {\n              this.listAllPacientes();\n              console.log('Cita eliminada exitosamente!');\n            }).catch(err => console.log(err));\n          }\n        }]\n      });\n      yield alert.present();\n    });\n  }\n}\nMiInfoPage.ɵfac = function MiInfoPage_Factory(t) {\n  return new (t || MiInfoPage)(i0.ɵɵdirectiveInject(i1.PacienteService), i0.ɵɵdirectiveInject(i2.AlertController));\n};\nMiInfoPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MiInfoPage,\n  selectors: [[\"app-mi-info\"]],\n  decls: 10,\n  vars: 1,\n  consts: [[\"slot\", \"start\"], [\"class\", \"user-list\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"expand\", \"block\", \"color\", \"dark\", \"routerLink\", \"../crear-pacientes\"], [1, \"user-list\"], [\"name\", \"person\"], [\"name\", \"call\"], [\"name\", \"paw\"], [\"item-end\", \"\"], [\"ion-button\", \"\", \"clear\", \"\", 3, \"routerLink\"], [\"name\", \"create\", 2, \"zoom\", \"2.0\", \"background-color\", \"white\"], [\"ion-button\", \"\", \"clear\", \"\", 3, \"click\"], [\"name\", \"trash\", 2, \"zoom\", \"2.0\", \"background-color\", \"white\"]],\n  template: function MiInfoPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-menu-button\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \"Listado de mis mascotas\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\");\n      i0.ɵɵtemplate(7, MiInfoPage_ion_item_7_Template, 25, 9, \"ion-item\", 1);\n      i0.ɵɵelementStart(8, \"ion-button\", 2);\n      i0.ɵɵtext(9, \"Crear Paciente\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pacientes);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.IonButton, i2.IonButtons, i2.IonContent, i2.IonHeader, i2.IonIcon, i2.IonItem, i2.IonLabel, i2.IonMenuButton, i2.IonTitle, i2.IonToolbar, i2.RouterLinkDelegate, i4.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;;;;;;;;;;ICSlCC,mCAA+D;IAGzDA,8BAAmC;IAACA,YACtC;IAAAA,iBAAK;IACLA,yBAAG;IACDA,8BAAiC;IAACA,YACpC;IAAAA,iBAAI;IACJA,yBAAG;IACDA,8BAAgC;IAACA,aACnC;IAAAA,iBAAI;IACJA,0BAAG;IACDA,+BAAgC;IAACA,aACnC;IAAAA,iBAAI;IACJA,0BAAG;IACDA,+BAAgC;IAACA,aACnC;IAAAA,iBAAI;IACJA,0BAAG;IACDA,+BAAgC;IAACA,aACnC;IAAAA,iBAAI;IAENA,+BAAc;IAEVA,+BAA8E;IAChFA,iBAAS;IACTA,mCAA+D;IAAtCA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAA2B;IAAA,EAAC;IAC5DA,gCAA4E;IAC9EA,iBAAS;;;;IAxB6BA,eACtC;IADsCA,0DACtC;IAEoCA,eACpC;IADoCA,mDACpC;IAEmCA,eACnC;IADmCA,0DACnC;IAEmCA,eACnC;IADmCA,wDACnC;IAEmCA,eACnC;IADmCA,wDACnC;IAEmCA,eACnC;IADmCA,wDACnC;IAGyBA,eAAgD;IAAhDA,uEAAgD;;;ADvB/E,OAAM,MAAOC,UAAU;EAGrBC,YACUC,eAAgC,EAChCC,eAAgC;IADhC,oBAAe,GAAfD,eAAe;IACf,oBAAe,GAAfC,eAAe;EACrB;EAEJC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAACH,eAAe,CAACI,MAAM,EAAE,CAACC,eAAe,EAAE,CAACC,IAAI,CAClDV,GAAG,CAACW,OAAO,IACTA,OAAO,CAACX,GAAG,CAACY,CAAC,IACXC;MAAGC,EAAE,EAAEF,CAAC,CAACG,OAAO,CAACC,GAAG,CAACF;IAAE,GAAKF,CAAC,CAACG,OAAO,CAACC,GAAG,CAACC,IAAI,EAAE,CAAG,CACpD,CACF,CACF,CAACC,SAAS,CAACD,IAAI,IAAG;MACjB,IAAI,CAACE,SAAS,GAAGF,IAAI;MACrBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC;IAC7B,CAAC,CAAC;EACJ;EAEMG,cAAc,CAACR,EAAU;;MAC7B,MAAMS,KAAK,GAAG,MAAM,IAAI,CAAClB,eAAe,CAACmB,MAAM,CAAC;QAC9CC,MAAM,EAAE,8CAA8C;QACtDC,OAAO,EAAE,CACP;UACEC,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE;SACP,EACD;UACED,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,MAAK;YACZ,IAAI,CAACzB,eAAe,CAAC0B,MAAM,CAAChB,EAAE,CAAC,CAACiB,IAAI,CAAC,MAAK;cACxC,IAAI,CAACxB,gBAAgB,EAAE;cACvBa,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC7C,CAAC,CAAC,CAACW,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC,CAAC;UACnC;SACD;OAEJ,CAAC;MACF,MAAMV,KAAK,CAACW,OAAO,EAAE;IACvB,CAAC;;;;mBA9CUhC,UAAU;AAAA;;QAAVA,UAAU;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVvBtC,kCAAY;MAGNA,kCAAmC;MACrCA,iBAAc;MACdA,iCAAW;MAAAA,uCAAuB;MAAAA,iBAAY;MAIlDA,mCAAa;MAEXA,sEA6BW;MAEXA,qCAAsF;MAAAA,8BAAc;MAAAA,iBAAa;;;MA/BlFA,eAAY;MAAZA,uCAAY","names":["map","i0","MiInfoPage","constructor","pacienteService","alertController","ngOnInit","listAllPacientes","getAll","snapshotChanges","pipe","changes","c","Object","id","payload","doc","data","subscribe","pacientes","console","log","deletePaciente","alert","create","header","buttons","text","role","handler","delete","then","catch","err","present","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/mi-info/mi-info.page.ts","/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/mi-info/mi-info.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PacienteService } from '../servicios/paciente.service';\nimport { map } from 'rxjs/operators';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-mi-info',\n  templateUrl: './mi-info.page.html',\n  styleUrls: ['./mi-info.page.scss'],\n})\nexport class MiInfoPage implements OnInit {\n  pacientes?:any[];\n\n  constructor(\n    private pacienteService: PacienteService,\n    private alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n    this.listAllPacientes();\n  }\n\n  listAllPacientes(){\n    this.pacienteService.getAll().snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ id: c.payload.doc.id, ...c.payload.doc.data() })\n        )\n      )\n    ).subscribe(data => {\n      this.pacientes = data;\n      console.log(this.pacientes);\n    });\n  }\n\n  async deletePaciente(id: string){    \n    const alert = await this.alertController.create({\n      header: '¿Esta seguro que desea eliminar el registro?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',          \n        },\n        {\n          text: 'Si',\n          role: 'confirm',\n          handler: () => {\n            this.pacienteService.delete(id).then(() => {\n              this.listAllPacientes();\n              console.log('Cita eliminada exitosamente!')\n            }).catch(err => console.log(err));\n          },\n        },\n      ],\n    });\n    await alert.present();    \n  }\n\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Listado de mis mascotas</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-item *ngFor=\"let paciente of pacientes\" class=\"user-list\">\n    <ion-label>\n      <h5>\n        <ion-icon name=\"person\"></ion-icon> &nbsp;  {{paciente.nombre}}\n      </h5>\n      <p>\n        <ion-icon name=\"call\"></ion-icon> {{paciente.numCel}}\n      </p>\n      <p>\n        <ion-icon name=\"paw\"></ion-icon> {{paciente.nombreMascota}}\n      </p>\n      <p>\n        <ion-icon name=\"paw\"></ion-icon> {{paciente.edadMascota}}\n      </p>\n      <p>\n        <ion-icon name=\"paw\"></ion-icon> {{paciente.tipoMascota}}\n      </p>\n      <p>\n        <ion-icon name=\"paw\"></ion-icon> {{paciente.razaMascota}}\n      </p>\n    </ion-label>\n    <div item-end>\n      <button ion-button clear [routerLink]=\"['/editar-paciente', paciente.id]\">\n        <ion-icon name=\"create\" style=\"zoom:2.0; background-color: white;\"></ion-icon>\n      </button>\n      <button ion-button clear (click)=\"deletePaciente(paciente.id)\">\n        <ion-icon name=\"trash\" style=\"zoom:2.0; background-color: white\"></ion-icon>\n      </button>\n    </div>\n  </ion-item>\n\n  <ion-button type=\"submit\" expand=\"block\" color=\"dark\" routerLink=\"../crear-pacientes\">Crear Paciente</ion-button>\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}