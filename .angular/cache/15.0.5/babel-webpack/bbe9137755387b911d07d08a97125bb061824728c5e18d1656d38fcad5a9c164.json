{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nlet MiInfoPage = class MiInfoPage {\n  constructor(pacienteService, alertController) {\n    this.pacienteService = pacienteService;\n    this.alertController = alertController;\n  }\n  ngOnInit() {\n    this.listAllPacientes();\n  }\n  listAllPacientes() {\n    this.pacienteService.getAll().snapshotChanges().pipe(map(changes => changes.map(c => Object.assign({\n      id: c.payload.doc.id\n    }, c.payload.doc.data())))).subscribe(data => {\n      this.pacientes = data;\n      console.log(this.pacientes);\n    });\n  }\n  deleteCita(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        header: '¿Esta seguro que desea eliminar el registro?',\n        buttons: [{\n          text: 'No',\n          role: 'cancel'\n        }, {\n          text: 'Si',\n          role: 'confirm',\n          handler: () => {\n            this.citaService.delete(id).then(() => {\n              this.listAllCitas();\n              console.log('Cita eliminada exitosamente!');\n            }).catch(err => console.log(err));\n          }\n        }]\n      });\n      yield alert.present();\n    });\n  }\n};\nMiInfoPage = __decorate([Component({\n  selector: 'app-mi-info',\n  templateUrl: './mi-info.page.html',\n  styleUrls: ['./mi-info.page.scss']\n})], MiInfoPage);\nexport { MiInfoPage };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,GAAG,QAAQ,gBAAgB;AAO7B,IAAMC,UAAU,GAAhB,MAAMA,UAAU;EAGrBC,YACUC,eAAgC,EAChCC,eAAkB;IADlB,oBAAe,GAAfD,eAAe;IACf,oBAAe,GAAfC,eAAe;EACrB;EAEJC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAACH,eAAe,CAACI,MAAM,EAAE,CAACC,eAAe,EAAE,CAACC,IAAI,CAClDT,GAAG,CAACU,OAAO,IACTA,OAAO,CAACV,GAAG,CAACW,CAAC,IACXC;MAAGC,EAAE,EAAEF,CAAC,CAACG,OAAO,CAACC,GAAG,CAACF;IAAE,GAAKF,CAAC,CAACG,OAAO,CAACC,GAAG,CAACC,IAAI,EAAE,CAAG,CACpD,CACF,CACF,CAACC,SAAS,CAACD,IAAI,IAAG;MACjB,IAAI,CAACE,SAAS,GAAGF,IAAI;MACrBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC;IAC7B,CAAC,CAAC;EACJ;EAEMG,UAAU,CAACR,EAAU;;MACzB,MAAMS,KAAK,GAAG,MAAM,IAAI,CAAClB,eAAe,CAACmB,MAAM,CAAC;QAC9CC,MAAM,EAAE,8CAA8C;QACtDC,OAAO,EAAE,CACP;UACEC,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE;SACP,EACD;UACED,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,MAAK;YACZ,IAAI,CAACC,WAAW,CAACC,MAAM,CAACjB,EAAE,CAAC,CAACkB,IAAI,CAAC,MAAK;cACpC,IAAI,CAACC,YAAY,EAAE;cACnBb,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC7C,CAAC,CAAC,CAACa,KAAK,CAACC,GAAG,IAAIf,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC,CAAC;UACnC;SACD;OAEJ,CAAC;MACF,MAAMZ,KAAK,CAACa,OAAO,EAAE;IACvB,CAAC;;CAEF;AAhDYlC,UAAU,eALtBF,SAAS,CAAC;EACTqC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,qBAAqB;EAClCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWrC,UAAU,CAgDtB;SAhDYA,UAAU","names":["Component","map","MiInfoPage","constructor","pacienteService","alertController","ngOnInit","listAllPacientes","getAll","snapshotChanges","pipe","changes","c","Object","id","payload","doc","data","subscribe","pacientes","console","log","deleteCita","alert","create","header","buttons","text","role","handler","citaService","delete","then","listAllCitas","catch","err","present","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/mi-info/mi-info.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PacienteService } from '../servicios/paciente.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-mi-info',\n  templateUrl: './mi-info.page.html',\n  styleUrls: ['./mi-info.page.scss'],\n})\nexport class MiInfoPage implements OnInit {\n  pacientes?:any[];\n\n  constructor(\n    private pacienteService: PacienteService,\n    private alertController: A\n  ) { }\n\n  ngOnInit() {\n    this.listAllPacientes();\n  }\n\n  listAllPacientes(){\n    this.pacienteService.getAll().snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ id: c.payload.doc.id, ...c.payload.doc.data() })\n        )\n      )\n    ).subscribe(data => {\n      this.pacientes = data;\n      console.log(this.pacientes);\n    });\n  }\n\n  async deleteCita(id: string){    \n    const alert = await this.alertController.create({\n      header: '¿Esta seguro que desea eliminar el registro?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',          \n        },\n        {\n          text: 'Si',\n          role: 'confirm',\n          handler: () => {\n            this.citaService.delete(id).then(() => {\n              this.listAllCitas();\n              console.log('Cita eliminada exitosamente!')\n            }).catch(err => console.log(err));\n          },\n        },\n      ],\n    });\n    await alert.present();    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}