{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servicios/auth.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nexport class LoginPage {\n  constructor(auth, toastController, navController) {\n    this.auth = auth;\n    this.toastController = toastController;\n    this.navController = navController;\n    this.credenciales = {\n      correo: \"\",\n      password: \"\"\n    };\n  }\n  ngOnInit() {}\n  login() {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log(this.credenciales);\n      const respuesta = yield this.auth.login(this.credenciales.correo, this.credenciales.password).catch(error => {\n        this.mostrarMensaje(\"Usuario o Contraseña invalidos.\");\n      });\n      if (respuesta) {\n        this.mostrarMensaje(\"Bienvenido!!\");\n        this.navController.navigateRoot('doctores');\n      }\n    });\n  }\n  mostrarMensaje(mensaje) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const toast = yield this.toastController.create({\n        position: 'top',\n        message: mensaje,\n        duration: 3000\n      });\n      toast.present();\n    });\n  }\n}\nLoginPage.ɵfac = function LoginPage_Factory(t) {\n  return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ToastController), i0.ɵɵdirectiveInject(i2.NavController));\n};\nLoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPage,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 2,\n  consts: [[\"src\", \"../../assets/img/login.png\", \"alt\", \"Imagen inicio de sesion\", 1, \"avatar\"], [\"name\", \"person-circle-outline\"], [\"type\", \"text\", \"placeholder\", \"Ingrese su Usuario\", \"id\", \"username\", \"required\", \"\", 1, \"user\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"lock-closed-outline\"], [\"type\", \"password\", \"placeholder\", \"Ingrese su Contrase\\u00F1a\", \"id\", \"password\", \"required\", \"\", 1, \"contra\", 3, \"ngModel\", \"ngModelChange\"], [\"expand\", \"block\", \"color\", \"dark\", 1, \"ingresar\", 3, \"click\"], [\"type\", \"submit\", \"expand\", \"block\", \"color\", \"dark\", \"routerLink\", \"../registro\", 1, \"registrar\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"div\")(6, \"div\");\n      i0.ɵɵelement(7, \"img\", 0);\n      i0.ɵɵelementStart(8, \"ion-item\");\n      i0.ɵɵelement(9, \"ion-icon\", 1);\n      i0.ɵɵelementStart(10, \"ion-input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_10_listener($event) {\n        return ctx.credenciales.correo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"ion-item\");\n      i0.ɵɵelement(12, \"ion-icon\", 3);\n      i0.ɵɵelementStart(13, \"ion-input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_13_listener($event) {\n        return ctx.credenciales.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"ion-button\", 5);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_14_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(15, \"Ingresar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"ion-button\", 6);\n      i0.ɵɵtext(17, \"Registrarse\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.credenciales.correo);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.credenciales.password);\n    }\n  },\n  dependencies: [i3.NgControlStatus, i3.RequiredValidator, i3.NgModel, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonIcon, i2.IonInput, i2.IonItem, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor, i2.RouterLinkDelegate, i4.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;AASA,OAAM,MAAOA,SAAS;EAMpBC,YAAoBC,IAAiB,EAC3BC,eAAgC,EACjCC,aAA4B;IAFjB,SAAI,GAAJF,IAAI;IACd,oBAAe,GAAfC,eAAe;IAChB,kBAAa,GAAbC,aAAa;IANtB,iBAAY,GAAG;MACbC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;KACX;EAIG;EAEJC,QAAQ,IACR;EAEMC,KAAK;;MACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC;MAC9B,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACV,IAAI,CAACM,KAAK,CAAC,IAAI,CAACG,YAAY,CAACN,MAAM,EAAE,IAAI,CAACM,YAAY,CAACL,QAAQ,CAAC,CAACO,KAAK,CACjGC,KAAK,IAAG;QACN,IAAI,CAACC,cAAc,CAAC,iCAAiC,CAAC;MACxD,CAAC,CAAC;MACJ,IAAIH,SAAS,EAAE;QACb,IAAI,CAACG,cAAc,CAAC,cAAc,CAAC;QACnC,IAAI,CAACX,aAAa,CAACY,YAAY,CAAC,UAAU,CAAC;;IAE/C,CAAC;;EAEKD,cAAc,CAACE,OAAY;;MAC/B,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACf,eAAe,CAACgB,MAAM,CAAC;QAC9CC,QAAQ,EAAE,KAAK;QACfC,OAAO,EAAEJ,OAAO;QAChBK,QAAQ,EAAE;OACX,CAAC;MACFJ,KAAK,CAACK,OAAO,EAAE;IACjB,CAAC;;;;mBAjCUvB,SAAS;AAAA;;QAATA,SAAS;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTtBC,kCAAY;MAEGA,qBAAK;MAAAA,iBAAY;MAIhCA,mCAAa;MAIPA,yBAEgC;MAE9BA,gCAAW;MACTA,8BAAkD;MAClDA,qCAAkI;MAAvHA;QAAA;MAAA,EAAkC;MAAqFA,iBAAY;MAGhJA,iCAAU;MACRA,+BAAgD;MAChDA,qCAA4I;MAAjIA;QAAA;MAAA,EAAmC;MAA8FA,iBAAY;MAG1JA,sCAA4E;MAAnBA;QAAA,OAAUC,WAAO;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAa;MAEnGA,sCAAiG;MAAAA,4BAAW;MAAAA,iBAAa;;;MAV1GA,gBAAkC;MAAlCA,iDAAkC;MAKlCA,eAAmC;MAAnCA,mDAAmC","names":["LoginPage","constructor","auth","toastController","navController","correo","password","ngOnInit","login","console","log","credenciales","respuesta","catch","error","mostrarMensaje","navigateRoot","mensaje","toast","create","position","message","duration","present","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/login/login.page.ts","/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/login/login.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../servicios/auth.service';\nimport { NavController, ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  credenciales = {\n    correo: \"\",\n    password: \"\"\n  }\n  constructor(private auth: AuthService,\n    private toastController: ToastController,\n    public navController: NavController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async login() {\n    console.log(this.credenciales);\n    const respuesta = await this.auth.login(this.credenciales.correo, this.credenciales.password).catch(\n      error => {\n        this.mostrarMensaje(\"Usuario o Contraseña invalidos.\")\n      });\n    if (respuesta) {\n      this.mostrarMensaje(\"Bienvenido!!\")\n      this.navController.navigateRoot('doctores')\n    }\n  }\n\n  async mostrarMensaje(mensaje: any) {\n    const toast = await this.toastController.create({\n      position: 'top',\n      message: mensaje,\n      duration: 3000\n    });\n    toast.present();\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>login</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <div>\n\n    <div>\n      <img class=\"avatar\"\n        src=\"../../assets/img/login.png\"\n        alt=\"Imagen inicio de sesion\">\n\n        <ion-item >\n          <ion-icon name=\"person-circle-outline\"></ion-icon>\n          <ion-input [(ngModel)] =\"credenciales.correo\" type=\"text\" placeholder=\"Ingrese su Usuario\" class=\"user\" id=\"username\" required=\"\"></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-icon name=\"lock-closed-outline\"></ion-icon>\n          <ion-input [(ngModel)]=\"credenciales.password\" type=\"password\" placeholder=\"Ingrese su Contraseña\" class=\"contra\" id=\"password\" required=\"\"></ion-input>\n        </ion-item>\n\n        <ion-button class=\"ingresar\" expand=\"block\" color=\"dark\" (click) =\"login()\">Ingresar</ion-button>\n\n      <ion-button class=\"registrar\" type=\"submit\" expand=\"block\" color=\"dark\" routerLink=\"../registro\">Registrarse</ion-button>\n    </div>\n  </div>\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}