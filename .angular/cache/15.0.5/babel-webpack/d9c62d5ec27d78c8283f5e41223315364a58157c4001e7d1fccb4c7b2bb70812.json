{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servicios/cita.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/editar-cita/\", a1];\n};\nfunction CitasPage_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\")(2, \"h5\");\n    i0.ɵɵelement(3, \"ion-icon\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵelement(6, \"ion-icon\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 8)(9, \"button\", 9);\n    i0.ɵɵelement(10, \"ion-icon\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CitasPage_ion_item_8_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cita_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteCita(cita_r1.id));\n    });\n    i0.ɵɵelement(12, \"ion-icon\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cita_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", cita_r1.fecha, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", cita_r1.hora, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, cita_r1.id));\n  }\n}\nexport class CitasPage {\n  constructor(citaService, alertController) {\n    this.citaService = citaService;\n    this.alertController = alertController;\n    this.handlerMessage = '';\n    this.roleMessage = '';\n  }\n  ngOnInit() {\n    this.listAllCitas();\n  }\n  listAllCitas() {\n    this.citaService.getAll().snapshotChanges().pipe(map(changes => changes.map(c => Object.assign({\n      id: c.payload.doc.id\n    }, c.payload.doc.data())))).subscribe(data => {\n      this.citas = data;\n      console.log(this.citas);\n    });\n  }\n  deleteCita(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        header: '¿Esta seguro que desea eliminar el registro?',\n        buttons: [{\n          text: 'No',\n          role: 'cancel'\n        }, {\n          text: 'Si',\n          role: 'confirm',\n          handler: () => {\n            this.citaService.delete(id).then(() => {\n              this.listAllCitas();\n              console.log('Cita eliminada exitosamente!');\n            }).catch(err => console.log(err));\n          }\n        }]\n      });\n      yield alert.present();\n    });\n  }\n}\nCitasPage.ɵfac = function CitasPage_Factory(t) {\n  return new (t || CitasPage)(i0.ɵɵdirectiveInject(i1.CitaService), i0.ɵɵdirectiveInject(i2.AlertController));\n};\nCitasPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CitasPage,\n  selectors: [[\"app-citas\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"ios\", \"list-ios\", \"hydrated\"], [1, \"ios\", \"hydrated\"], [\"class\", \"user-list\", 4, \"ngFor\", \"ngForOf\"], [\"expand\", \"full\", \"routerLink\", \"/crear-cita\", \"color\", \"primary\"], [\"name\", \"add-circle-outline\"], [1, \"user-list\"], [\"name\", \"person\"], [\"name\", \"call\"], [\"item-end\", \"\"], [\"ion-button\", \"\", \"clear\", \"\", 3, \"routerLink\"], [\"name\", \"create\", 2, \"zoom\", \"2.0\", \"background-color\", \"white\"], [\"ion-button\", \"\", \"clear\", \"\", 3, \"click\"], [\"name\", \"trash\", 2, \"zoom\", \"2.0\", \"background-color\", \"white\"]],\n  template: function CitasPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \" Citas Medicas App \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\", 0)(6, \"ion-list-header\", 1);\n      i0.ɵɵtext(7, \" Citas agendadas \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, CitasPage_ion_item_8_Template, 13, 5, \"ion-item\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"ion-button\", 3);\n      i0.ɵɵelement(10, \"ion-icon\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.citas);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonIcon, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonListHeader, i2.IonTitle, i2.IonToolbar, i2.RouterLinkDelegate, i4.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;;;;;;;;;;ICWhCC,mCAAuD;IAGjDA,8BAAmC;IAACA,YACtC;IAAAA,iBAAK;IACLA,yBAAG;IACDA,8BAAiC;IAACA,YACpC;IAAAA,iBAAI;IAENA,8BAAc;IAEVA,gCAA8E;IAChFA,iBAAS;IACTA,mCAAuD;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IACpDA,gCAA4E;IAC9EA,iBAAS;;;;IAZ6BA,eACtC;IADsCA,8CACtC;IAEoCA,eACpC;IADoCA,6CACpC;IAGyBA,eAAyC;IAAzCA,mEAAyC;;;ADZ1E,OAAM,MAAOC,SAAS;EAKpBC,YAAoBC,WAAwB,EACxBC,eAAgC;IADhC,gBAAW,GAAXD,WAAW;IACX,oBAAe,GAAfC,eAAe;IAJnC,mBAAc,GAAG,EAAE;IACnB,gBAAW,GAAG,EAAE;EAGwC;EAExDC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACH,WAAW,CAACI,MAAM,EAAE,CAACC,eAAe,EAAE,CAACC,IAAI,CAC9CV,GAAG,CAACW,OAAO,IACTA,OAAO,CAACX,GAAG,CAACY,CAAC,IACXC;MAAGC,EAAE,EAAEF,CAAC,CAACG,OAAO,CAACC,GAAG,CAACF;IAAE,GAAKF,CAAC,CAACG,OAAO,CAACC,GAAG,CAACC,IAAI,EAAE,CAAG,CACpD,CACF,CACF,CAACC,SAAS,CAACD,IAAI,IAAG;MACjB,IAAI,CAACE,KAAK,GAAGF,IAAI;MACjBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,KAAK,CAAC;IACzB,CAAC,CAAC;EACJ;EAEMG,UAAU,CAACR,EAAU;;MACzB,MAAMS,KAAK,GAAG,MAAM,IAAI,CAAClB,eAAe,CAACmB,MAAM,CAAC;QAC9CC,MAAM,EAAE,8CAA8C;QACtDC,OAAO,EAAE,CACP;UACEC,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE;SACP,EACD;UACED,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,MAAK;YACZ,IAAI,CAACzB,WAAW,CAAC0B,MAAM,CAAChB,EAAE,CAAC,CAACiB,IAAI,CAAC,MAAK;cACpC,IAAI,CAACxB,YAAY,EAAE;cACnBa,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC7C,CAAC,CAAC,CAACW,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC,CAAC;UACnC;SACD;OAEJ,CAAC;MAEF,MAAMV,KAAK,CAACW,OAAO,EAAE;IACvB,CAAC;;;;mBA/CUhC,SAAS;AAAA;;QAATA,SAAS;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXtBtC,kCAAY;MAGNA,mCACF;MAAAA,iBAAY;MAIhBA,mCAAa;MAGPA,iCACF;MAAAA,iBAAkB;MAClBA,qEAiBW;MACbA,iBAAW;MAEXA,qCAAmE;MACjEA,+BAA+C;MACjDA,iBAAa;;;MAtBgBA,eAAQ;MAARA,mCAAQ","names":["map","i0","CitasPage","constructor","citaService","alertController","ngOnInit","listAllCitas","getAll","snapshotChanges","pipe","changes","c","Object","id","payload","doc","data","subscribe","citas","console","log","deleteCita","alert","create","header","buttons","text","role","handler","delete","then","catch","err","present","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/citas/citas.page.ts","/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/citas/citas.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CitaService } from '../servicios/cita.service';\nimport { map } from 'rxjs/operators';\nimport { Cita } from '../entidades/Cita';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-citas',\n  templateUrl: './citas.page.html',\n  styleUrls: ['./citas.page.scss'],\n})\nexport class CitasPage implements OnInit {\n  citas?:  any[];\n  handlerMessage = '';\n  roleMessage = '';\n\n  constructor(private citaService: CitaService,\n              private alertController: AlertController) { }\n\n  ngOnInit() {\n    this.listAllCitas();  \n  }\n\n  listAllCitas(){\n    this.citaService.getAll().snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ id: c.payload.doc.id, ...c.payload.doc.data() })\n        )\n      )\n    ).subscribe(data => {\n      this.citas = data;\n      console.log(this.citas);\n    });\n  }\n\n  async deleteCita(id: string){    \n    const alert = await this.alertController.create({\n      header: '¿Esta seguro que desea eliminar el registro?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',          \n        },\n        {\n          text: 'Si',\n          role: 'confirm',\n          handler: () => {\n            this.citaService.delete(id).then(() => {\n              this.listAllCitas();\n              console.log('Cita eliminada exitosamente!')\n            }).catch(err => console.log(err));\n          },\n        },\n      ],\n    });\n\n    await alert.present();    \n  }\n\n\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>\n      Citas Medicas App\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list class=\"ios list-ios hydrated\">\n    <ion-list-header class=\"ios hydrated\">\n      Citas agendadas\n    </ion-list-header>\n    <ion-item *ngFor=\"let cita of citas\" class=\"user-list\">\n      <ion-label>\n        <h5>\n          <ion-icon name=\"person\"></ion-icon> {{cita.fecha}}\n        </h5>\n        <p>\n          <ion-icon name=\"call\"></ion-icon> {{cita.hora}}\n        </p>\n      </ion-label>\n      <div item-end>\n        <button ion-button clear [routerLink]=\"['/editar-cita/', cita.id]\">\n          <ion-icon name=\"create\" style=\"zoom:2.0; background-color: white;\"></ion-icon>\n        </button>\n        <button ion-button clear (click)=\"deleteCita(cita.id)\">\n          <ion-icon name=\"trash\" style=\"zoom:2.0; background-color: white\"></ion-icon>\n        </button>\n      </div>\n    </ion-item>\n  </ion-list>  \n  \n  <ion-button expand=\"full\" routerLink=\"/crear-cita\" color=\"primary\">\n    <ion-icon name=\"add-circle-outline\"></ion-icon>    \n  </ion-button>\n  \n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}