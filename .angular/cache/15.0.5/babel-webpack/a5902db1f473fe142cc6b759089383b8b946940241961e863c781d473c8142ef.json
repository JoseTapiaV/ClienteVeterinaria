{"ast":null,"code":"/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\n/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\nconst sanitizeDOMString = untrustedString => {\n  try {\n    if (untrustedString instanceof IonicSafeString) {\n      return untrustedString.value;\n    }\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\r\n     * Create a document fragment\r\n     * separate from the main DOM,\r\n     * create a div to do our work in\r\n     */\n    const documentFragment = document.createDocumentFragment();\n    const workingDiv = document.createElement('div');\n    documentFragment.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\r\n     * Remove any elements\r\n     * that are blocked\r\n     */\n    blockedTags.forEach(blockedTag => {\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        const element = getElementsToRemove[elementIndex];\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        } else {\n          documentFragment.removeChild(element);\n        }\n        /**\r\n         * We still need to sanitize\r\n         * the children of this element\r\n         * as they are left behind\r\n         */\n        const childElements = getElementChildren(element);\n        /* eslint-disable-next-line */\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\r\n     * Go through remaining elements and remove\r\n     * non-allowed attribs\r\n     */\n    // IE does not support .children on document fragments, only .childNodes\n    const dfChildren = getElementChildren(documentFragment);\n    /* eslint-disable-next-line */\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    }\n    // Append document fragment to div\n    const fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment);\n    // First child is always the div we did our work in\n    const getInnerDiv = fragmentDiv.querySelector('div');\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  } catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\nconst sanitizeElement = element => {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\n    const attribute = element.attributes.item(i);\n    const attributeName = attribute.name;\n    // remove non-allowed attribs\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    }\n    // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n    const attributeValue = attribute.value;\n    /* eslint-disable-next-line */\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\r\n   * Sanitize any nested children\r\n   */\n  const childElements = getElementChildren(element);\n  /* eslint-disable-next-line */\n  for (let i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\nconst getElementChildren = el => {\n  return el.children != null ? el.children : el.childNodes;\n};\nconst isSanitizerEnabled = () => {\n  var _a;\n  const win = window;\n  const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n  if (config) {\n    if (config.get) {\n      return config.get('sanitizerEnabled', true);\n    } else {\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n    }\n  }\n  return true;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nclass IonicSafeString {\n  constructor(value) {\n    this.value = value;\n  }\n}\nexport { IonicSafeString as I, sanitizeDOMString as s };","map":{"version":3,"names":["sanitizeDOMString","untrustedString","IonicSafeString","value","isSanitizerEnabled","documentFragment","document","createDocumentFragment","workingDiv","createElement","appendChild","innerHTML","blockedTags","forEach","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","element","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","err","console","error","nodeType","i","attributes","attribute","item","attributeName","name","allowedAttributes","includes","toLowerCase","removeAttribute","attributeValue","el","children","childNodes","_a","win","window","config","Ionic","get","sanitizerEnabled","undefined","constructor","I","s"],"sources":["C:/Users/rolan/Desktop/ClienteVeterinaria/node_modules/@ionic/core/dist/esm/index-dff497fb.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\n/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nconst sanitizeDOMString = (untrustedString) => {\r\n  try {\r\n    if (untrustedString instanceof IonicSafeString) {\r\n      return untrustedString.value;\r\n    }\r\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\r\n      return untrustedString;\r\n    }\r\n    /**\r\n     * Create a document fragment\r\n     * separate from the main DOM,\r\n     * create a div to do our work in\r\n     */\r\n    const documentFragment = document.createDocumentFragment();\r\n    const workingDiv = document.createElement('div');\r\n    documentFragment.appendChild(workingDiv);\r\n    workingDiv.innerHTML = untrustedString;\r\n    /**\r\n     * Remove any elements\r\n     * that are blocked\r\n     */\r\n    blockedTags.forEach((blockedTag) => {\r\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\r\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n        const element = getElementsToRemove[elementIndex];\r\n        if (element.parentNode) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        else {\r\n          documentFragment.removeChild(element);\r\n        }\r\n        /**\r\n         * We still need to sanitize\r\n         * the children of this element\r\n         * as they are left behind\r\n         */\r\n        const childElements = getElementChildren(element);\r\n        /* eslint-disable-next-line */\r\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n          sanitizeElement(childElements[childIndex]);\r\n        }\r\n      }\r\n    });\r\n    /**\r\n     * Go through remaining elements and remove\r\n     * non-allowed attribs\r\n     */\r\n    // IE does not support .children on document fragments, only .childNodes\r\n    const dfChildren = getElementChildren(documentFragment);\r\n    /* eslint-disable-next-line */\r\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n      sanitizeElement(dfChildren[childIndex]);\r\n    }\r\n    // Append document fragment to div\r\n    const fragmentDiv = document.createElement('div');\r\n    fragmentDiv.appendChild(documentFragment);\r\n    // First child is always the div we did our work in\r\n    const getInnerDiv = fragmentDiv.querySelector('div');\r\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n    return '';\r\n  }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nconst sanitizeElement = (element) => {\r\n  // IE uses childNodes, so ignore nodes that are not elements\r\n  if (element.nodeType && element.nodeType !== 1) {\r\n    return;\r\n  }\r\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n    const attribute = element.attributes.item(i);\r\n    const attributeName = attribute.name;\r\n    // remove non-allowed attribs\r\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n      element.removeAttribute(attributeName);\r\n      continue;\r\n    }\r\n    // clean up any allowed attribs\r\n    // that attempt to do any JS funny-business\r\n    const attributeValue = attribute.value;\r\n    /* eslint-disable-next-line */\r\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n      element.removeAttribute(attributeName);\r\n    }\r\n  }\r\n  /**\r\n   * Sanitize any nested children\r\n   */\r\n  const childElements = getElementChildren(element);\r\n  /* eslint-disable-next-line */\r\n  for (let i = 0; i < childElements.length; i++) {\r\n    sanitizeElement(childElements[i]);\r\n  }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nconst getElementChildren = (el) => {\r\n  return el.children != null ? el.children : el.childNodes;\r\n};\r\nconst isSanitizerEnabled = () => {\r\n  var _a;\r\n  const win = window;\r\n  const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\r\n  if (config) {\r\n    if (config.get) {\r\n      return config.get('sanitizerEnabled', true);\r\n    }\r\n    else {\r\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\r\nclass IonicSafeString {\r\n  constructor(value) {\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nexport { IonicSafeString as I, sanitizeDOMString as s };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}