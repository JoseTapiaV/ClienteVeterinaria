{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet CitaService = class CitaService {\n  constructor(storage, db) {\n    this.storage = storage;\n    this.db = db;\n    this.idDoc = localStorage.getItem(\"ID\");\n    this.dbPath = '/Doctores/' + this.idDoc + '/Citas';\n    this.citasRef = db.collection(this.dbPath);\n  }\n  getAll() {\n    return this.citasRef;\n  }\n  getById(id) {\n    return this.citasRef.doc(id).valueChanges();\n  }\n  create(cita) {\n    return this.citasRef.add(cita);\n  }\n  update(id, cita) {\n    return this.citasRef.doc(id).update(cita);\n  }\n  delete(id) {\n    return this.citasRef.doc(id).delete();\n  }\n  uploadImage(file, path, nombre) {\n    return new Promise(resolve => {\n      const filePath = path + '/' + nombre;\n      const ref = this.storage.ref(filePath);\n      const task = ref.put(file);\n      task.snapshotChanges().pipe(finalize(() => {\n        ref.getDownloadURL().subscribe(res => {\n          const downloadURL = res;\n          resolve(downloadURL);\n          return;\n        });\n      })).subscribe();\n    });\n  }\n};\nCitaService = __decorate([Injectable({\n  providedIn: 'root'\n})], CitaService);\nexport { CitaService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQnC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAMtBC,YACUC,OAA2B,EAC3BC,EAAoB;IADpB,YAAO,GAAPD,OAAO;IACP,OAAE,GAAFC,EAAE;IANZ,UAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;IAC1B,WAAM,GAAG,YAAY,GAAC,IAAI,CAACC,KAAK,GAAC,QAAQ;IAM/C,IAAI,CAACC,QAAQ,GAAGJ,EAAE,CAACK,UAAU,CAAC,IAAI,CAACC,MAAM,CAAC;EAC5C;EAEAC,MAAM;IACJ,OAAO,IAAI,CAACH,QAAQ;EACtB;EAEAI,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACD,EAAE,CAAC,CAACE,YAAY,EAAE;EAC7C;EAEAC,MAAM,CAACC,IAAU;IACf,OAAO,IAAI,CAACT,QAAQ,CAACU,GAAG,CAACD,IAAI,CAAC;EAChC;EAEAE,MAAM,CAACN,EAAU,EAAEI,IAAU;IAC3B,OAAO,IAAI,CAACT,QAAQ,CAACM,GAAG,CAACD,EAAE,CAAC,CAACM,MAAM,CAACF,IAAI,CAAC;EAC3C;EAEAG,MAAM,CAACP,EAAU;IACf,OAAO,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACD,EAAE,CAAC,CAACO,MAAM,EAAE;EACvC;EAEAC,WAAW,CAACC,IAAS,EAAEC,IAAY,EAAEC,MAAc;IACjD,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAG;MAC3B,MAAMC,QAAQ,GAAGJ,IAAI,GAAG,GAAG,GAAGC,MAAM;MACpC,MAAMI,GAAG,GAAG,IAAI,CAACzB,OAAO,CAACyB,GAAG,CAACD,QAAQ,CAAC;MACtC,MAAME,IAAI,GAAGD,GAAG,CAACE,GAAG,CAACR,IAAI,CAAC;MAC1BO,IAAI,CAACE,eAAe,EAAE,CAACC,IAAI,CACzBC,QAAQ,CAAC,MAAK;QACZL,GAAG,CAACM,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;UACnC,MAAMC,WAAW,GAAGD,GAAG;UACvBV,OAAO,CAACW,WAAW,CAAC;UACpB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,CACH,CACEF,SAAS,EAAE;IAChB,CAAC,CAAC;EACJ;CAED;AAlDYlC,WAAW,eAHvBD,UAAU,CAAC;EACVsC,UAAU,EAAE;CACb,CAAC,GACWrC,WAAW,CAkDvB;SAlDYA,WAAW","names":["Injectable","CitaService","constructor","storage","db","localStorage","getItem","idDoc","citasRef","collection","dbPath","getAll","getById","id","doc","valueChanges","create","cita","add","update","delete","uploadImage","file","path","nombre","Promise","resolve","filePath","ref","task","put","snapshotChanges","pipe","finalize","getDownloadURL","subscribe","res","downloadURL","providedIn"],"sourceRoot":"","sources":["/Users/josetapia/Documents/VeterinariaCli-main/ClienteVeterinaria/src/app/servicios/cita.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\nimport { Observable } from 'rxjs';\nimport { Cita } from '../entidades/Cita';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CitaService {\n  \n  idDoc = localStorage.getItem(\"ID\")\n  private dbPath = '/Doctores/'+this.idDoc+'/Citas';\n  citasRef: AngularFirestoreCollection<Cita>;\n\n  constructor(\n    private storage: AngularFireStorage,\n    private db: AngularFirestore) {    \n    this.citasRef = db.collection(this.dbPath); \n  }\n\n  getAll(): AngularFirestoreCollection<Cita> {\n    return this.citasRef;\n  }\n\n  getById(id: string): Observable<any> {\n    return this.citasRef.doc(id).valueChanges();\n  }\n\n  create(cita: Cita): any {\n    return this.citasRef.add(cita);\n  }\n\n  update(id: string, cita: Cita): Promise<void> {\n    return this.citasRef.doc(id).update(cita);\n  }\n\n  delete(id: string): Promise<void> {\n    return this.citasRef.doc(id).delete();\n  }\n\n  uploadImage(file: any, path: string, nombre: string): Promise<string> {\n    return new Promise(resolve => {\n      const filePath = path + '/' + nombre;\n      const ref = this.storage.ref(filePath);\n      const task = ref.put(file);\n      task.snapshotChanges().pipe(\n        finalize(() => {\n          ref.getDownloadURL().subscribe(res => {\n            const downloadURL = res;\n            resolve(downloadURL);\n            return;\n          });\n        })\n      )\n        .subscribe();\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}