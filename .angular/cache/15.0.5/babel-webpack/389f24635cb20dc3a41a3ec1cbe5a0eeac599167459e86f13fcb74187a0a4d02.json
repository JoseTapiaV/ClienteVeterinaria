{"ast":null,"code":"/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\nimport { r as registerInstance, e as createEvent, h, H as Host } from './index-8e692445.js';\nimport { b as getIonMode } from './ionic-global-c95cf239.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-17060b7c.js';\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nconst Backdrop = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    /**\r\n     * If `true`, the backdrop will be visible.\r\n     */\n    this.visible = true;\n    /**\r\n     * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\r\n     */\n    this.tappable = true;\n    /**\r\n     * If `true`, the backdrop will stop propagation on tap.\r\n     */\n    this.stopPropagation = true;\n  }\n  connectedCallback() {\n    if (this.stopPropagation) {\n      this.blocker.block();\n    }\n  }\n  disconnectedCallback() {\n    this.blocker.unblock();\n  }\n  onMouseDown(ev) {\n    this.emitTap(ev);\n  }\n  emitTap(ev) {\n    if (this.stopPropagation) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n    if (this.tappable) {\n      this.ionBackdropTap.emit();\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      tabindex: \"-1\",\n      \"aria-hidden\": \"true\",\n      class: {\n        [mode]: true,\n        'backdrop-hide': !this.visible,\n        'backdrop-no-tappable': !this.tappable\n      }\n    });\n  }\n};\nBackdrop.style = {\n  ios: backdropIosCss,\n  md: backdropMdCss\n};\nexport { Backdrop as ion_backdrop };","map":{"version":3,"names":["r","registerInstance","e","createEvent","h","H","Host","b","getIonMode","G","GESTURE_CONTROLLER","backdropIosCss","backdropMdCss","Backdrop","constructor","hostRef","ionBackdropTap","blocker","createBlocker","disableScroll","visible","tappable","stopPropagation","connectedCallback","block","disconnectedCallback","unblock","onMouseDown","ev","emitTap","preventDefault","emit","render","mode","tabindex","class","style","ios","md","ion_backdrop"],"sources":["C:/Users/rolan/Desktop/ClienteVeterinaria/node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, e as createEvent, h, H as Host } from './index-8e692445.js';\r\nimport { b as getIonMode } from './ionic-global-c95cf239.js';\r\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-17060b7c.js';\r\n\r\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\r\n\r\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\r\n\r\nconst Backdrop = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\r\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\r\n      disableScroll: true,\r\n    });\r\n    /**\r\n     * If `true`, the backdrop will be visible.\r\n     */\r\n    this.visible = true;\r\n    /**\r\n     * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\r\n     */\r\n    this.tappable = true;\r\n    /**\r\n     * If `true`, the backdrop will stop propagation on tap.\r\n     */\r\n    this.stopPropagation = true;\r\n  }\r\n  connectedCallback() {\r\n    if (this.stopPropagation) {\r\n      this.blocker.block();\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    this.blocker.unblock();\r\n  }\r\n  onMouseDown(ev) {\r\n    this.emitTap(ev);\r\n  }\r\n  emitTap(ev) {\r\n    if (this.stopPropagation) {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n    if (this.tappable) {\r\n      this.ionBackdropTap.emit();\r\n    }\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { tabindex: \"-1\", \"aria-hidden\": \"true\", class: {\r\n        [mode]: true,\r\n        'backdrop-hide': !this.visible,\r\n        'backdrop-no-tappable': !this.tappable,\r\n      } }));\r\n  }\r\n};\r\nBackdrop.style = {\r\n  ios: backdropIosCss,\r\n  md: backdropMdCss\r\n};\r\n\r\nexport { Backdrop as ion_backdrop };\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,EAAEC,CAAC,IAAIC,IAAI,QAAQ,qBAAqB;AAC3F,SAASC,CAAC,IAAIC,UAAU,QAAQ,4BAA4B;AAC5D,SAASC,CAAC,IAAIC,kBAAkB,QAAQ,kCAAkC;AAE1E,MAAMC,cAAc,GAAG,wWAAwW;AAE/X,MAAMC,aAAa,GAAG,wWAAwW;AAE9X,MAAMC,QAAQ,GAAG,MAAM;EACrBC,WAAW,CAACC,OAAO,EAAE;IACnBd,gBAAgB,CAAC,IAAI,EAAEc,OAAO,CAAC;IAC/B,IAAI,CAACC,cAAc,GAAGb,WAAW,CAAC,IAAI,EAAE,gBAAgB,EAAE,CAAC,CAAC;IAC5D,IAAI,CAACc,OAAO,GAAGP,kBAAkB,CAACQ,aAAa,CAAC;MAC9CC,aAAa,EAAE;IACjB,CAAC,CAAC;IACF;AACJ;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;AACJ;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB;AACJ;AACA;IACI,IAAI,CAACC,eAAe,GAAG,IAAI;EAC7B;EACAC,iBAAiB,GAAG;IAClB,IAAI,IAAI,CAACD,eAAe,EAAE;MACxB,IAAI,CAACL,OAAO,CAACO,KAAK,EAAE;IACtB;EACF;EACAC,oBAAoB,GAAG;IACrB,IAAI,CAACR,OAAO,CAACS,OAAO,EAAE;EACxB;EACAC,WAAW,CAACC,EAAE,EAAE;IACd,IAAI,CAACC,OAAO,CAACD,EAAE,CAAC;EAClB;EACAC,OAAO,CAACD,EAAE,EAAE;IACV,IAAI,IAAI,CAACN,eAAe,EAAE;MACxBM,EAAE,CAACE,cAAc,EAAE;MACnBF,EAAE,CAACN,eAAe,EAAE;IACtB;IACA,IAAI,IAAI,CAACD,QAAQ,EAAE;MACjB,IAAI,CAACL,cAAc,CAACe,IAAI,EAAE;IAC5B;EACF;EACAC,MAAM,GAAG;IACP,MAAMC,IAAI,GAAGzB,UAAU,CAAC,IAAI,CAAC;IAC7B,OAAQJ,CAAC,CAACE,IAAI,EAAE;MAAE4B,QAAQ,EAAE,IAAI;MAAE,aAAa,EAAE,MAAM;MAAEC,KAAK,EAAE;QAC5D,CAACF,IAAI,GAAG,IAAI;QACZ,eAAe,EAAE,CAAC,IAAI,CAACb,OAAO;QAC9B,sBAAsB,EAAE,CAAC,IAAI,CAACC;MAChC;IAAE,CAAC,CAAC;EACR;AACF,CAAC;AACDR,QAAQ,CAACuB,KAAK,GAAG;EACfC,GAAG,EAAE1B,cAAc;EACnB2B,EAAE,EAAE1B;AACN,CAAC;AAED,SAASC,QAAQ,IAAI0B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}